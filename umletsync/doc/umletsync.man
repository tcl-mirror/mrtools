[manpage_begin umletsync 1 1.1]
[comment {
#
# This software is copyrighted 2013 by G. Andrew Mangogna.
# The following terms apply to all files associated with the software unless
# explicitly disclaimed in individual files.
# 
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors and
# need not follow the licensing terms described here, provided that the
# new terms are clearly indicated on the first page of each file where
# they apply.
# 
# IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING
# OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES
# THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
# IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE
# NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,
# OR MODIFICATIONS.
# 
# GOVERNMENT USE: If you are acquiring this software on behalf of the
# U.S. government, the Government shall have only "Restricted Rights"
# in the software and related documentation as defined in the Federal
# Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2).  If you
# are acquiring the software on behalf of the Department of Defense,
# the software shall be classified as "Commercial Computer Software"
# and the Government shall have only "Restricted Rights" as defined in
# Clause 252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing,
# the authors grant the U.S. Government and others acting in its behalf
# permission to use and distribute the software in accordance with the
# terms specified in this license.
# 
#  *++
# MODULE:
#	umletsync -- insert UMLet state information into asciidoc files
# ABSTRACT:
# 
#  *--
}]
[moddesc "umletsync command"]
[titledesc "Tools for asciidoc literate programming"]
[copyright "2013 G. Andrew Mangogna"]
[description]
The [cmd umletsync] program is a
[uri http://www.literateprogramming.com/tools.html "literate programming"]
tool for
[uri http://www.methods.co.nz/asciidoc asciidoc] documents that use
[uri http://www.umlet.com UMLet] to diagram state models.
[cmd Umletsync] will extract text for a state diagram state
from a an UMLet file and insert it into the proper place in an asciidoc
document file.
See the [sectref "State Model Synchronization"] section below for how this
is accomplished.

[section Options]

[list_begin definitions]
[usage [cmd umletsync]\
    [arg [opt -version]]\
    [arg [opt -report]]\
    [arg [opt -nodiffs]]\
    [arg [opt "-level loggerlevel"]]\
    [arg file]]
[list_end]

[list_begin options]
[opt_def -version]
Print the [cmd umletsync] version and license and exit.

[opt_def -report]
Write a report of which classes were considered,
which actions were never accessed and which actions were
accessed multiple times.
The report is useful to verify that all the state were covered and
to detect spelling or "copy and paste" error in the requests.

[opt_def -nodiffs]
Do not insert back into the document
the difference between the old action text and the
substituted action text.

[opt_def -level [arg loggerlevel]]
Set the logging level to [arg loggerlevel].
Setting the level to [arg debug] give detailed information about the
internal operation.
Setting the level to [arg info] gives details of the parsing for the
asciidoc document.

[list_end]

[section "State Model Synchronization"]

[cmd Umletsync] reads [arg file] line by line.
Each line is copied to a temporary file.
Lines are scanned for requests.
Requests are in the form of a stylized asciidoc comment.
So requests are ignored by the subsequent asciidoc processing.

Requests are of two forms:
[list_begin itemized]
[item]
File specifications
[para]
Requests of the form, [cmd "// %States <file> <class>"],
associate a file named, [arg file],
which is assumed to contain an UMLet state diagram,
to a class named, [arg class].
[item]
Action substitutions
[para]
Requests of the form, [cmd "// %Action <class> <state>"],
request that the next asciidoc source code block be replaced with the
action text for [arg state] from [arg class].
[list_end]

When an action substitution takes place,
the previous context of the action source block are retained and if
the previous action text is different from its replacement (and if the
[arg -nodiffs] options if not given),
then those differences are inserted as an asciidoc comment block
following the action source block.

After all substitutions are accomplished,
[arg file] is saved to [arg file.bak] and the temporary file
that was used to accumulate the output is renamed to [arg file].


[manpage_end]
