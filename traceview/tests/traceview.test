#!/usr/bin/env tclsh
#
# Copyright 2013, InCube Labs, LLC.
# All rights reserved.  This file contains unpublished work that is
# confidential and proprietary to InCube Labs.  This document may not, in
# whole or in part, be duplicated, disclosed or used for any purposes,
# whatsoever, without written permission from InCube Labs.
#
#*++
# PROJECT:
#
# MODULE:
#
# ABSTRACT:
#
#*--
#

package require Tcl 8.6
package require Tk 8.6
package require cmdline
package require logger

source ../src/traceview.tcl
package require traceview

# Add custom arguments here.
set optlist {
    {level.arg warn {Log debug level}}
}
array set options [::cmdline::getKnownOptions argv $optlist]

::logger::setlevel $options(level)

package require tcltest
eval tcltest::configure $argv

namespace eval ::traceview::test {
    ::logger::initNamespace [namespace current]

    namespace import ::tcltest::*

    wm withdraw .

    proc query {msg} {
        return [tk_messageBox\
            -default no\
            -icon question\
            -message $msg\
            -parent .\
            -title "Test Question"\
            -type yesno\
        ]
    }

    test create-1.0 {
        Create a traceview
    } -setup {
        toplevel .trace
        wm protocol .trace WM_DELETE_WINDOW {destroy .trace}
    } -cleanup {
    } -body {
        traceview tacktrace create ::trv .trace\
                -mapfile atc -ralfile atctrl.ral
        query "Did trace window appear?"
    } -result {yes}

    test receive-1.0 {
        Add an instrumentation line to a trace
    } -setup {
    } -cleanup {
    } -body {
        ::trv receive "instrument {func foo file bar line 22}"
        query "Is there an instrumentation line?"
    } -result {yes}

    test receive-2.0 {
        Add a stub line to a trace
    } -setup {
    } -cleanup {
    } -body {
        ::trv receive "stub {domain foo eop bar parameters {}}"
        query "Is there a stub line?"
    } -result {yes}

    test receive-2.1 {
        Attempt to add a bad stub line to a trace
    } -setup {
    } -cleanup {
    } -body {
        ::trv receive "stub {foo bar baz}"
        query "Are there error lines?"
    } -result {yes}

    test receive-3.0 {
        Receive an unknown message type
    } -setup {
    } -cleanup {
    } -body {
        ::trv receive "foo bar baz"
        query "Is there an unknown message type line?"
    } -result {yes}


if 0 {
    # This is just a template for additional tests.

    test X-1.0 {
    } -setup {
    } -cleanup {
    } -body {
    } -result {}
}
    tk_messageBox\
        -icon question\
        -message "Terminate test?"\
        -parent .\
        -title "Test Question"\
        -type ok

    cleanupTests
}

namespace delete ::traceview::test
