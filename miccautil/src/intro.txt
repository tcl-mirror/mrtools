// vim:set syntax=asciidoc:

== Introduction

This document describes the `miccautil` package.
`Miccautil` is a pure Tcl package that is intended to accompany
the `micca` XUML translation tool.

=== Background

https://repos.modelrealization.com/cgi-bin/fossil/mrtools/wiki?name=MiccaPage[Micca]
is a program to aid in the translation of
https://en.wikipedia.org/wiki/Executable_UML[Executable UML]
domain models into ``C'' code.
During the translation process,
information about a platform specific model is input to `micca` via
a domain specific language.
Executing the domain specific language then populates the platform
specific model.
The platform specific model itself consists of a relationally normalized
schema.
The populated platform model is then used to generate the translation code.

Upon request,
`micca` will serialize the populated platform model of a domain.
The `miccautil` package is used to access the platform specific model
population and query common aspects of it.
Note that `miccautil` is not _required_ to access the domain model.
It simply provides a set of more common, and sometimes more complex,
queries on the model population.
It is quite feasable to deserialize the domain model population
(either using the TclRAL native format or SQLite format) and write
custom queries against it.
The relational schema of the platform model is given in the
https://repos.modelrealization.com/cgi-bin/fossil/mrtools/doc/trunk/micca/doc/micca.pdf[micca literate program document].

=== Overview

The `miccautil` package consists of one TclOO command and
several ordinary procedures which together form the namespace ensemble
command, `::miccautil`

The TclOO command is named, `model`, and represents the platform
specific population for a single domain.

Object instances of `model` have methods which support the following
types of processing.

* Obtaining basic domain information such as class names.
* Obtaining the state transition matrix of a class state model.
* Recording state transitions for a class to track the state and
  transition coverage of test cases.
* Reporting information on the inital instance population.
* Exporting the state model of a class as a directed graph.
* Exporting the state model of a class as a
  https://graphviz.org/[graphviz] drawing.

The other procedures in `miccautil` perform calculations on
the directed graph of a state model such as a
https://en.wikipedia.org/wiki/Depth-first_search[depth first search]
(DFS) or finding a spanning tree.

=== How to Read This Document

This document is a
http://literateprogramming.com[literate program document].
As such it includes a complete description of both the design and
implementation of the `miccautil`.
Further information on the particular literal programming syntax
used here is given in <<literate-programming,Appendix A>>.

Readers are not expected to read the document in sequence from beginning
to end.
Skipping around is encouraged.
The document file is hyperlinked with both a Table of Contents and
Index to help direct you to a specific topic.
