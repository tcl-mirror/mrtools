<h3>Coding the Washing Machine</h3>
The
<a href="/doc/trunk/moore/wiki/wash.html" target="_blank">code</a>
is a relatively straighforward encoding of the graphic.
<p>
We define a state model, wmachine, using the <em>model</em> command (line 6).
Each state of the model is declared with the State command.
The State command invocations correspond to the boxes on the state model
graphic.
The State command has an interface like the core <em>proc</em> command.
Any parameters would be listed in the second argument.
The body of the State command is the Tcl code that will be run when
the state is entered upon a transition.
A Tcl variable called, <em>self</em> is implicitly declared in the
state action.
The value of the variable is set to the name of the state machine command
that is currently executing the transition.
This value is useful for accessing the configuration of the state machine
and can serve as the source of event generation.
<p>
For this example,
the components of the washing machine, such as the pump and motor,
are simulated by simple <em>puts</em> commands.
In a real program these would be replaced by procedure invocations or
event generation to other state machines.
Also note that there are several places where we simulate the behavior
of some of these components by using the <em>after</em> command.
<p>
The Transition command defines which state is entered when a given event
is delivered (<em>i.e.</em> line 28).
The Transition command invocations correspond to the arcs on the state
model graphic.
<p>
Several things are worth noting in the specification of a state model.
<ul>
<li>
There is no command to specify events.
The events to which the state model responds is simply the set of
events mentioned in the Transition commands.
</li>
<li>
The order of State and Transition command is arbitrary.
You may put all the State followed by all the Transitions or any other
combination that you find clear.
The style here is to put the Transitions after the state to which they apply,
but that is strictly a stylistic convention.
</li>
</ul>
