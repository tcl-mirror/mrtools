%!PS-Adobe-3.0
%%Creator: graphviz version 2.26.3 (20100126.1600)
%%Title: wmachine
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval
EncodingVector 45 /hyphen put

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
       dup 1 exch div /InvScaleFactor exch def
       scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw text fitted to its expected width
/alignedtext {			% width text
	/text exch def
	/width exch def
	gsave
		width 0 gt {
			[] 0 setdash
			text stringwidth pop width exch sub text length div 0 text ashow
		} if
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
setupLatin1
%%Page: 1 1
%%PageBoundingBox: 152 36 460 756
%%PageOrientation: Portrait
0 0 1 beginpage
gsave
152 36 308 720 boxprim clip newpath
0.41958 0.41958 set_scale 0 rotate 365.8 90.8 translate
% Idle
gsave
2 setlinewidth
bold
0 0 0 nodecolor
newpath 727 1708 moveto
179 1708 lineto
179 1540 lineto
727 1540 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
187 1691.4 moveto 61 (Idle {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
187 1673.4 moveto 112 (    # Stop motor) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
187 1655.4 moveto 212 (    puts "$self: Stopping motor") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
187 1621.4 moveto 516 (    # For testing purpose, we want to be able to run the Tcl event loop and) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
187 1603.4 moveto 532 (    # when we are done with the cycle we will use "vwait" to determine that) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
187 1585.4 moveto 157 (    # we have finished.) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
187 1567.4 moveto 196 (    set ::wmachine\($self\) Idle) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
187 1549.4 moveto 10 (}) alignedtext
grestore
% FillingForWashing
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 494 1486 moveto
0 1486 lineto
0 1300 lineto
494 1300 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
8 1469.4 moveto 157 (FillingForWashing {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1451.4 moveto 159 (    # Open water valve) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1433.4 moveto 250 (    puts "$self: Opening water valve") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1399.4 moveto 478 (    # At this point we need the washing tub sensor to tell us that the) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1381.4 moveto 418 (    # tub is full. For simplicity, we will simulate the sensor by) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1363.4 moveto 271 (    # means of the Tcl "after" command.) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1345.4 moveto 253 (    # SIMULATING THE TUB SENSOR) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1327.4 moveto 361 (    after 5000 [list moore generate {} - Full -> $self]) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
8 1309.4 moveto 10 (}) alignedtext
grestore
% Idle->FillingForWashing
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 378.05 1539.95 moveto
364.7 1524.98 350.67 1509.26 336.96 1493.88 curveto
stroke
0 0 0 edgecolor
newpath 339.53 1491.5 moveto
330.26 1486.36 lineto
334.3 1496.16 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 339.53 1491.5 moveto
330.26 1486.36 lineto
334.3 1496.16 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
357 1509.4 moveto 28 (Run) alignedtext
grestore
% Agitating
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 483 1246 moveto
79 1246 lineto
79 1094 lineto
483 1094 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
87 1229.4 moveto 100 (Agitating {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
87 1211.4 moveto 160 (    # Close water value) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
87 1193.4 moveto 242 (    puts "$self: Closing water valve") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
87 1175.4 moveto 176 (    # Set motor to agitate) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
87 1157.4 moveto 274 (    puts "$self: Setting motor to agitate") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
87 1139.4 moveto 388 (    # Generate "Done" to self delayed by the wash time.) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
87 1121.4 moveto 372 (    moore delay [$self cget wash] $self - Done -> $self) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
87 1103.4 moveto 10 (}) alignedtext
grestore
% FillingForWashing->Agitating
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 261.22 1299.72 moveto
263.4 1285.41 265.65 1270.69 267.81 1256.53 curveto
stroke
0 0 0 edgecolor
newpath 271.31 1256.75 moveto
269.36 1246.34 lineto
264.39 1255.7 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 271.31 1256.75 moveto
269.36 1246.34 lineto
264.39 1255.7 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
267 1269.4 moveto 25 (Full) alignedtext
grestore
% EmptyingWashWater
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 488 1040 moveto
90 1040 lineto
90 872 lineto
488 872 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
98 1023.4 moveto 183 (EmptyingWashWater {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
98 1005.4 moveto 112 (    # Stop motor) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
98 987.4 moveto 212 (    puts "$self: Stopping motor") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
98 969.4 moveto 113 (    # Start pump) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
98 951.4 moveto 205 (    puts "$self: Starting pump") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
98 917.4 moveto 253 (    # SIMULATING THE TUB SENSOR) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
98 899.4 moveto 382 (    after 5000 [list moore generate {} - Empty -> $self]) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
98 881.4 moveto 10 (}) alignedtext
grestore
% Agitating->EmptyingWashWater
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 283.84 1093.95 moveto
284.37 1079.8 284.93 1064.85 285.48 1050.23 curveto
stroke
0 0 0 edgecolor
newpath 288.98 1050.3 moveto
285.85 1040.17 lineto
281.98 1050.04 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 288.98 1050.3 moveto
285.85 1040.17 lineto
281.98 1050.04 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
285 1063.4 moveto 37 (Done) alignedtext
grestore
% FillingForRinse
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 482 818 moveto
106 818 lineto
106 634 lineto
482 634 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 801.4 moveto 136 (FillingForRinse {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 783.4 moveto 109 (    # Stop pump) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 765.4 moveto 209 (    puts "$self: Stopping pump") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 747.4 moveto 159 (    # Open water valve) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 729.4 moveto 250 (    puts "$self: Opening water valve") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 679.4 moveto 253 (    # SIMULATING THE TUB SENSOR) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 661.4 moveto 361 (    after 5000 [list moore generate {} - Full -> $self]) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
113.5 643.4 moveto 10 (}) alignedtext
grestore
% EmptyingWashWater->FillingForRinse
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 290.83 871.99 moveto
291.13 857.81 291.46 842.95 291.77 828.36 curveto
stroke
0 0 0 edgecolor
newpath 295.27 828.4 moveto
291.99 818.32 lineto
288.28 828.24 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 295.27 828.4 moveto
291.99 818.32 lineto
288.28 828.24 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
292 841.4 moveto 45 (Empty) alignedtext
grestore
% Rinsing
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 487 580 moveto
103 580 lineto
103 428 lineto
487 428 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 563.4 moveto 87 (Rinsing {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 545.4 moveto 159 (    # Close water valve) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 527.4 moveto 242 (    puts "$self: Closing water valve") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 509.4 moveto 176 (    # Set motor to agitate) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 491.4 moveto 274 (    puts "$self: Setting motor to agitate") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 473.4 moveto 368 (    # Generate Done to self delayed by the rinse time) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 455.4 moveto 369 (    moore delay [$self cget rinse] $self - Done -> $self) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
110.5 437.4 moveto 10 (}) alignedtext
grestore
% FillingForRinse->Rinsing
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 294.42 633.78 moveto
294.48 619.4 294.55 604.59 294.61 590.35 curveto
stroke
0 0 0 edgecolor
newpath 298.11 590.11 moveto
294.66 580.09 lineto
291.11 590.08 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 298.11 590.11 moveto
294.66 580.09 lineto
291.11 590.08 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
295 603.4 moveto 25 (Full) alignedtext
grestore
% EmptyingRinseWater
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 494 374 moveto
96 374 lineto
96 206 lineto
494 206 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
104 357.4 moveto 182 (EmptyingRinseWater {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
104 339.4 moveto 112 (    # Stop motor) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
104 321.4 moveto 212 (    puts "$self: Stopping motor") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
104 303.4 moveto 113 (    # Start pump) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
104 285.4 moveto 205 (    puts "$self: Starting pump") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
104 251.4 moveto 253 (    # SIMULATING THE TUB SENSOR) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
104 233.4 moveto 382 (    after 5000 [list moore generate {} - Empty -> $self]) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
104 215.4 moveto 10 (}) alignedtext
grestore
% Rinsing->EmptyingRinseWater
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 295 427.95 moveto
295 413.8 295 398.85 295 384.23 curveto
stroke
0 0 0 edgecolor
newpath 298.5 384.17 moveto
295 374.17 lineto
291.5 384.17 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 298.5 384.17 moveto
295 374.17 lineto
291.5 384.17 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
295 397.4 moveto 37 (Done) alignedtext
grestore
% Spinning
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 639 152 moveto
261 152 lineto
261 0 lineto
639 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 135.4 moveto 97 (Spinning {} {) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 117.4 moveto 109 (    # Stop pump) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 99.4 moveto 209 (    puts "$self: Stopping pump") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 81.4 moveto 155 (    # Set motor to spin) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 63.4 moveto 253 (    puts "$self: Setting motor to spin") alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 45.4 moveto 362 (    # Generate Done to self delayed by the spin time) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 27.4 moveto 363 (    moore delay [$self cget spin] $self - Done -> $self) alignedtext
0 0 0 nodecolor
14 /Times-Roman set_font
268.5 9.4 moveto 10 (}) alignedtext
grestore
% EmptyingRinseWater->Spinning
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 356.04 205.73 moveto
366.83 190.83 378.07 175.31 388.87 160.4 curveto
stroke
0 0 0 edgecolor
newpath 391.78 162.34 moveto
394.81 152.19 lineto
386.11 158.24 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 391.78 162.34 moveto
394.81 152.19 lineto
386.11 158.24 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
382 175.4 moveto 45 (Empty) alignedtext
grestore
% Spinning->Idle
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 488.95 152.2 moveto
505.91 192.17 522 242.57 522 290 curveto
522 1393 522 1393 522 1393 curveto
522 1439.5 509.01 1489.14 494.29 1530.45 curveto
stroke
0 0 0 edgecolor
newpath 490.97 1529.35 moveto
490.83 1539.94 lineto
497.55 1531.75 lineto
closepath fill
1 setlinewidth
solid
0 0 0 edgecolor
newpath 490.97 1529.35 moveto
490.83 1539.94 lineto
497.55 1531.75 lineto
closepath stroke
0 0 0 edgecolor
14 /Times-Roman set_font
522 841.4 moveto 37 (Done) alignedtext
grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
%%BoundingBox: 152 36 460 756
end
restore
%%EOF
