<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="12.2">
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>410</x>
      <y>290</y>
      <w>270</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>bg=light_gray
Empty
--
# Stop the pump
select one mtr related by self-&gt;R2[MTR]
    where (MotorID = 'Pump')
mtr.Stop()
# Close the drain valve
select one wv related by self-&gt;R2[WV]
     where (ValveID = 'Drain')
wv.Close()
# Disable the sensor
select one wls related by self-&gt;R7[WLS]
wls.Disable()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>390</x>
      <y>580</y>
      <w>320</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>Filling
--
# Enable the sensor
select one wls related by self-&gt;R7[WLS]
wls.Enable()
# Open inlet valve(s)
if (temp = 'Hot')
    select one wv related by self-&gt;R6[WV]
        where (ValveID = 'Hot')
    wv.Open()
else if (temp = 'Cold')
    select one wv related by self-&gt;R6[WV]
        where (ValveID = 'Cold')
    wv.Open()
else
    select many wvs related by self-&gt;R6[WV]
        where (ValveID = 'Hot' OR ValveID = 'Cold')
    foreach wv in wvs
        wv.Open()
    endfor
end if</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>10</x>
      <y>1050</y>
      <w>270</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Agitating
--
# Start the agitator motor
select one mtr related by self-&gt;R2[MTR]
    where (MotorID = 'Agitator')
mtr.Start()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>810</x>
      <y>1050</y>
      <w>270</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Spinning
--
# Start the spin motor
select one mtr related by self-&gt;R2[MTR]
    where (MotorID = 'Spin')
mtr.Start()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>460</x>
      <y>490</y>
      <w>158</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
          Fill (temp)</panel_attributes>
    <additional_attributes>80;90;80;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>670</x>
      <y>1060</y>
      <w>160</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Spin</panel_attributes>
    <additional_attributes>140;50;30;50</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>250</x>
      <y>1060</y>
      <w>160</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Agitate</panel_attributes>
    <additional_attributes>30;50;140;50</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>390</x>
      <y>1010</y>
      <w>310</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>Full
--
# Close all valves
select many wvs related by self-&gt;R6[WV]
    where (ValveID = 'Hot' OR ValveID = 'Cold')
foreach wv in wvs
    wv.Open()
endfor
# Disable the sensor
select one wls related by self-&gt;R7[WLS]
wls.Disable()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>500</x>
      <y>910</y>
      <w>70</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Full</panel_attributes>
    <additional_attributes>40;100;40;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>410</x>
      <y>0</y>
      <w>270</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Emptying
--
# Open the drain valve
select one wv related by self-&gt;R2[WV]
     where (ValveID = 'Drain')
wv.Open()
# Start the pump
select one mtr related by self-&gt;R2[MTR]
    where (MotorID = 'Pump')
mtr.Start()
# Enable the sensor
select one wls related by self-&gt;R7[WLS]
wls.Enable()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>90</x>
      <y>610</y>
      <w>86</w>
      <h>460</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Stop</panel_attributes>
    <additional_attributes>50;30;50;440</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>900</x>
      <y>600</y>
      <w>86</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Stop</panel_attributes>
    <additional_attributes>50;30;50;450</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>490</x>
      <y>200</y>
      <w>98</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Empty</panel_attributes>
    <additional_attributes>50;90;50;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>820</x>
      <y>480</y>
      <w>270</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Stopping Spin
--
# Stop the motor
select one mtr related by self-&gt;R2[MTR]
    where (MotorID = 'Spin')
mtr.Stop()
# Drive on to empty tub after some delay
signal Stop to self at 1 min</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>650</x>
      <y>60</y>
      <w>336</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Stop</panel_attributes>
    <additional_attributes>30;50;300;50;300;420</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.custom.State</type>
    <coordinates>
      <x>20</x>
      <y>490</y>
      <w>270</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Stopping Agitation
--
# Stop the motor
select one mtr related by self-&gt;R2[MTR]
    where (MotorID = 'Agitator')
mtr.Stop()
# Drive on to empty tub
signal Stop to self</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>90</x>
      <y>50</y>
      <w>340</w>
      <h>460</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Stop</panel_attributes>
    <additional_attributes>320;50;50;50;50;440</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>910</x>
      <y>1220</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Clothes Tub
State Model</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
