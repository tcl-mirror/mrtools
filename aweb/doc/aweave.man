[manpage_begin aweave 1 1.1]
[comment {
# This software is copyrighted 2012 - 2013 by G. Andrew Mangogna.
# The following terms apply to all files associated with the software unless
# explicitly disclaimed in individual files.
# 
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors and
# need not follow the licensing terms described here, provided that the
# new terms are clearly indicated on the first page of each file where
# they apply.
# 
# IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING
# OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES
# THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
# IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE
# NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,
# OR MODIFICATIONS.
# 
# GOVERNMENT USE: If you are acquiring this software on behalf of the
# U.S. government, the Government shall have only "Restricted Rights"
# in the software and related documentation as defined in the Federal
# Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2).  If you
# are acquiring the software on behalf of the Department of Defense,
# the software shall be classified as "Commercial Computer Software"
# and the Government shall have only "Restricted Rights" as defined in
# Clause 252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing,
# the authors grant the U.S. Government and others acting in its behalf
# permission to use and distribute the software in accordance with the
# terms specified in this license.
# 
#  *++
# MODULE:
#	aweave -- literate programming tool for asciidoc
# ABSTRACT:
# 
#  *--
}]
[moddesc "aweave command"]
[titledesc "Tools for asciidoc literate programming"]
[copyright "2013 by G. Andrew Mangogna"]
[description]
The [cmd aweave] program is a
[uri http://www.literateprogramming.com/tools.html "literate programming"]
tool for
[uri http://www.methods.co.nz/asciidoc asciidoc] documents.

[cmd Aweave] copies [arg file] to [arg outfile] or the standard output
adding cross reference and indexing directives to the output corresponding
to the definitions and references contained in the
[sectref "Literate Program Chunks" "literate programming chunks"].
[arg File] is assumed to be asciidoc source containing source blocks that
in turn contain chunk definitions and references.
The generated output contains a section after each source block that contains
a chunk describing which chunks are defined and which are referenced.
Index entries for each chunk definition are also inserted into the output.
In keeping with most language agnostic literate programming tools,
no pretty printing of the source is performed.

[section Options]

[list_begin definitions]
[usage [cmd aweave]\
    [arg [opt -version]]\
    [arg [opt "-output outfile"]]\
    [arg [opt -report]]\
    [arg [opt "-level loggerlevel"]]\
    [arg file]]
[list_end]

[list_begin options]
[opt_def -version]
Print the [cmd aweave] version and license and exit.

[opt_def -output [arg outfile]]
Write the generated output to [arg outfile] rather than the standard output.

[opt_def -report]
Write a report of the chunk definitions and references on the standard error.

[opt_def -level [arg loggerlevel]]
Set the logging level to [arg loggerlevel].
Setting the level to [arg debug] give detailed information about the
internal operation.
Setting the level to [arg info] gives details of the chunk parsing for the
document.
Setting the level to [arg notice] gives details of undefined chunks.

[list_end]


[section "Literate Program Chunks"]
In asciidoc,
the markup for source code is signified by enclosing it with
lines of four or more hyphens.
For example,
[example {
----
proc myproc {a b} {
    chan puts "$a $b"
}
----
}]

[para]
So literate programming in asciidoc is somewhat different than
other literate programming environments in that the literate program
source is a valid asciidoc document that can be formatted on its own.
The only addition is that of chunk defintions contained in
otherwise normal source code markup.

[para]
[cmd Aweave] looks for asciidoc source blocks that contain
[emph chunk] definitions.
A [emph chunk] is a name enclosed in "<<" and ">>" markers.
There are both [emph "chunk definitions"] and [emph "chunk references"].
A chunk definition appends an equals sign (=) to the chunk marker.
A chunk reference does not.
For example,
[example {
----
<<utility procs>>=
proc ut1 {b} {
    return [string toupper $b]
}
<<common procs>>
----
}]

In this example,
<<utility procs>>=, is a chunk definition
and
<<common procs>>
is a chunk reference.

[para]
There may be multiple definitions of the same chunk.
In that case, the definitions are concatenated together in the order
in which they occur in the file.

[manpage_end]
