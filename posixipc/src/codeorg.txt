== Code Organization

[source,c]
----
<<macros>>=
<<package macros>>
----

[source,c]
----
<<static data definitions>>=
<<package static data>>
<<mq static data>>
----

[source,c]
----
<<forward function declarations>>=
<<mq forward function declarations>>
<<sem forward function declarations>>
<<shm forward function declarations>>
----

[source,c]
----
<<static function definitions>>=
<<mq static function definitions>>
<<sem static function definitions>>
<<shm static function definitions>>
----

[source,c]
----
<<external function definitions>>=
<<package external function definitions>>
----

=== Package Source Code

[source,c]
----
<<posixipc.c>>=
/*
<<edit warning>>
*/

/*
<<copyright info>>
*/

/*
 * Include Files
 */
#define _POSIX_C_SOURCE 201112L

<<include files>>
#include "tcl.h"
#include <fcntl.h>
#include <mqueue.h>

/*
 * Macros
 */
<<macros>>

/*
 * Constants
 */
<<constants>>

/*
 * Data Types
 */
<<data types>>

/*
 * Forward References
 */
<<forward function declarations>>

/*
 * Static Data
 */
<<static data definitions>>

/*
 * External Functions
 */
<<external function definitions>>

/*
 * Static Functions
 */
<<static function definitions>>
----

=== Unit Tests

[source,tcl]
----
<<posixipc.test>>=
<<edit warning>>
<<copyright info>>

package require Tcl 8.6
package require cmdline
package require logger
package require tcltest

# Add custom arguments here.
set optlist {
    {level.arg warn {Logging level}}
}
array set options [::cmdline::getKnownOptions argv $optlist]

logger::setlevel $options(level)

load ../tea/build/libposixipc1.0.so

eval tcltest::configure $argv

namespace eval ::posixipc::test {
    namespace import ::tcltest::*
    ::logger::initNamespace [namespace current] $::options(level)

    puts "testing posixipc version: [package require posixipc]"

    <<package initialization tests>>

    cleanupTests
}
----

////
----
test X-1.0 {
} -setup {
} -cleanup {
} -body {
} -result {}
----
////

// vim:set syntax=asciidoc:

