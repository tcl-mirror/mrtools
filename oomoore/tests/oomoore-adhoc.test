#!/usr/bin/env tclsh

source ../src/oomoore.tcl

package require oomoore

# Specify state model
::oomoore model create simpleModel {
    state s1 {} {
        puts "[self] [info level 0]"
        my variable foo
        set foo 100
    }
    transition s1 - e1 -> s1
    transition s1 - e2 -> s2

    state s2 {a} {
        puts "[self] [info level 0]"
        my variable foo
        puts "foo = $foo"
        puts "a = $a"
    }
    transition s2 - e2 -> s2
}

simpleModel draw
puts "methods = \"[info object methods simpleModel -all]\""


simpleModel loglevel info
simpleModel receive e1
simpleModel receive e2 42

simpleModel signal e2 47
simpleModel signal e1 100

after 100 set ::cont 1
vwait ::cont

simpleModel destroy

puts ********************

::oo::class create mymod {
    superclass ::oomoore::model
    constructor {} {
        next {
            initialState s2

            state s1 {} {
                puts "[self] [info level 0]"
                my variable foo
                set foo 100
            }
            transition s1 - e1 -> s1
            transition s1 - e2 -> s2

            state s2 {a} {
                puts "[self] [info level 0]"
                my variable foo
                puts "foo = $foo"
                puts "a = $a"
                my bar 47
                my signal e3
            }
            transition s2 - e2 -> s2
            transition s2 - e3 -> s1
        }
        my variable foo
        set foo 200
    }

    method bar {b} {
        puts "overridden bar: $b"
    }
}

mymod create my2
my2 draw
my2 loglevel info
my2 receive e2 42

my2 signal e1
my2 delayedSignal 100 e1
after 300 set ::cont 1
vwait ::cont

my2 signal e3

after 100 set ::cont 1
vwait ::cont

try {
    my2 receive foo
} on error {result} {
    puts $result
    return -level 0
}

puts ********************

::oo::class create wmachine {
    superclass ::oomoore::model
    constructor {} {
        next {
            state empty {} {
                my variable count
                puts "empty $count"
                incr count
            }
            state filling {} {
                my variable count
                puts "filling $count"
                incr count
            }
            state pumping {} {
                my variable count
                puts "pumping $count"
                incr count
            }
            transition empty - start -> filling
            transition filling - full -> pumping
            transition pumping - empty -> empty
        }
        my variable count
        set count 0
    }
}

wmachine create mywasher
mywasher draw
mywasher dotfile washer.dot
mywasher loglevel debug
mywasher receive start
mywasher receive full
mywasher receive empty

puts ********************

::oo::class create wmachine2 {
    superclass ::oomoore::model
    constructor {} {
        next {
            state empty {} {
                my variable count
                puts "empty $count"
                incr count
            }
            state filling {} {
                my variable count
                puts "filling $count"
                incr count
            }
            state pumping {} {
                my variable count
                puts "pumping $count"
                incr count
            }
            transition empty - start -> filling
            transition filling - full -> pumping
            transition pumping - empty -> empty
        }
        my variable count
        set count 0
    }
}

wmachine2 create mywasher2
mywasher2 draw
wmachine2 create mywasher3
mywasher2 loglevel debug
mywasher3 loglevel debug

mywasher2 receive start
mywasher3 receive start
mywasher2 receive full
mywasher3 receive full
mywasher2 receive empty
mywasher3 receive empty
