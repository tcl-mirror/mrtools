#!/usr/bin/env tclsh8.6

source ../src/oomoore.tcl

package require oomoore

# Specify state model
::oomoore model create simpleModel
simpleModel state s1 {} {
    puts "simpleModel: [self]: [info level 0]"
    my variable foo
    set foo 100
}
simpleModel transition s1 - e1 -> s1
simpleModel transition s1 - e2 -> s2

simpleModel state s2 {a} {
    puts "simpleModel: [self]: [info level 0]"
    my variable foo
    puts "foo = $foo"
    puts "a = $a"
}
simpleModel transition s2 - e2 -> s2

puts "methods = \"[info class methods simpleModel -all]\""

simpleModel create mymachine

mymachine loglevel info
mymachine receive e1
mymachine receive e2 42

mymachine signal e2 47
mymachine signal e1 100

after 100 set ::cont 1
vwait ::cont

mymachine destroy

puts ********************

::oomoore model create otherModel
otherModel state s1 {} {
    puts "otherModel: [self]: [info level 0]"
    my variable foo
    set foo 100
}
otherModel transition s1 - e1 -> s1
otherModel transition s1 - e2 -> s2
otherModel transition s1 - e3 -> bar

otherModel state s2 {a} {
    puts "otherModel: [self]: [info level 0]"
    my variable foo
    puts "foo = $foo"
    puts "a = $a"
    my bar 47
    my signal e3
}
otherModel transition s2 - e2 -> s2
otherModel transition s2 - e3 -> s1

::oo::class create mymod {
    superclass ::otherModel
    constructor {} {
        next s2
        my variable foo
        set foo 200
    }

    method bar {b} {
        puts "overridden bar: $b"
    }
}

mymod create my2
my2 loglevel info
my2 receive e2 42

my2 signal e1
my2 delayedSignal 100 e1
after 300 set ::cont 1
vwait ::cont

my2 signal e3

after 100 set ::cont 1
vwait ::cont

my2 receive foo

